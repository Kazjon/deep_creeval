!obj:pylearn2.cross_validation.TrainCV {
    dataset_iterator:  !obj:pylearn2.cross_validation.dataset_iterators.DatasetKFold {
        dataset: &train !obj:DUconfig.get_dataset {},
        n_folds: %(n_folds)i,
        shuffle: True
    },
    model: !obj:pylearn2.models.autoencoder.DenoisingAutoencoder {
        nvis : %(nvis)i,
        nhid : %(nhid)i,
        irange : 0.05,
        corruptor: !obj:pylearn2.corruption.BinomialCorruptor {
            corruption_level: %(corrupt)f,
        },
        act_enc: "tanh",
        act_dec: "tanh",    # Linear activation on the decoder side.
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate : 1e-3,
        batch_size : %(batch_size)i,
        cost : !obj:pylearn2.costs.cost.SumOfCosts {
            costs: [!obj:pylearn2.costs.autoencoder.MeanSquaredReconstructionError {}, !obj:pylearn2.costs.autoencoder.SparseActivation {coeff: %(sparse_coef)f,p: %(sparse_p)f}]
        },
        termination_criterion : !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: %(max_epochs)i,
        },
    },
    save_path: "%(save_path)s/%(layer_fn)s_l1.pkl",
    save_freq: 1
}
